# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestPruebalogin():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_pruebalogin(self):
    # Test name: prueba_login_2
    # Step # | name | target | value
    # 1 | open | / |
    self.driver.get("https://servidorhombremuerto.herokuapp.com/")
    # 2 | setWindowSize | 1936x1056 |
    self.driver.set_window_size(1936, 1056)
    # 3 | click | id=nombreAdmin |
    self.driver.find_element(By.ID, "nombreAdmin").click()
    # 4 | type | id=nombreAdmin | admin
    self.driver.find_element(By.ID, "nombreAdmin").send_keys("admin")
    # 5 | type | id=passwordAdmin | admin
    self.driver.find_element(By.ID, "passwordAdmin").send_keys("admin")
    # 6 | click | css=.btn |
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    # 7 | click | css=html |
    self.driver.find_element(By.CSS_SELECTOR, "html").click()
    # 8 | click | css=html |
    self.driver.find_element(By.CSS_SELECTOR, "html").click()
    # 9 | click | linkText=Cerrar sesión |
    self.driver.find_element(By.LINK_TEXT, "Cerrar sesión").click()
    # 10 | assertTitle | Iniciar sesion de administrador |
    assert self.driver.title == "Iniciar sesion de administrador"
    # 11 | assertTitle | Panel de control |
    assert self.driver.title == "Panel de control"
